{
  "_args": [
    [
      {
        "raw": "get-ready@^1.0.0",
        "scope": null,
        "escapedName": "get-ready",
        "name": "get-ready",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/vsastray/Documents/project/yiliao/api/node_modules/ali-oss"
    ]
  ],
  "_from": "get-ready@>=1.0.0 <2.0.0",
  "_id": "get-ready@1.0.0",
  "_inCache": true,
  "_location": "/get-ready",
  "_nodeVersion": "4.1.1",
  "_npmUser": {
    "name": "fengmk2",
    "email": "fengmk2@gmail.com"
  },
  "_npmVersion": "2.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "get-ready@^1.0.0",
    "scope": null,
    "escapedName": "get-ready",
    "name": "get-ready",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/ali-oss",
    "/sdk-base"
  ],
  "_resolved": "https://registry.npmjs.org/get-ready/-/get-ready-1.0.0.tgz",
  "_shasum": "f91817f1e9adecfea13a562adfc8de883ab34782",
  "_shrinkwrap": null,
  "_spec": "get-ready@^1.0.0",
  "_where": "/Users/vsastray/Documents/project/yiliao/api/node_modules/ali-oss",
  "author": {
    "name": "fengmk2",
    "email": "m@fengmk2.com",
    "url": "http://fengmk2.com"
  },
  "bugs": {
    "url": "https://github.com/node-modules/ready/issues"
  },
  "dependencies": {},
  "description": "mixin to add one-time ready event callback handler",
  "devDependencies": {
    "eslint": "1",
    "istanbul": "0",
    "mocha": "2",
    "should": "7",
    "thunk-mocha": "0"
  },
  "directories": {},
  "dist": {
    "shasum": "f91817f1e9adecfea13a562adfc8de883ab34782",
    "tarball": "https://registry.npmjs.org/get-ready/-/get-ready-1.0.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "f0b30352a084ee65bc44d493ab2e2629a3d8a5d8",
  "homepage": "https://github.com/node-modules/ready#readme",
  "keywords": [
    "ready",
    "once",
    "event"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "fengmk2",
      "email": "fengmk2@gmail.com"
    }
  ],
  "name": "get-ready",
  "optionalDependencies": {},
  "readme": "get-ready\n=====\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Test coverage][codecov-image]][codecov-url]\n[![David deps][david-image]][david-url]\n[![npm download][download-image]][download-url]\n\n[npm-image]: https://img.shields.io/npm/v/get-ready.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/get-ready\n[travis-image]: https://img.shields.io/travis/node-modules/ready.svg?style=flat-square\n[travis-url]: https://travis-ci.org/node-modules/ready\n[codecov-image]: https://codecov.io/github/node-modules/ready/coverage.svg?branch=master\n[codecov-url]: https://codecov.io/github/node-modules/ready?branch=master\n[david-image]: https://img.shields.io/david/node-modules/ready.svg?style=flat-square\n[david-url]: https://david-dm.org/node-modules/ready\n[download-image]: https://img.shields.io/npm/dm/get-ready.svg?style=flat-square\n[download-url]: https://npmjs.org/package/get-ready\n\n**Fork from [supershabam/ready](https://github.com/supershabam/ready)**\n\nNodeJS mixin to add one-time ready event\n\n## Purpose\nEvents are great. You should use events, but not for signaling ready! Ready implies state, and once you are ready, you stay ready.\n\nThis is a module for everyone who has bound an event handler.on('ready', function() {}) that doesn't execute because you added the handler after the 'ready' event already fired.\n\n## Warning\nIf you use this mixin, you must have 'ready', '_ready', and '_readyCallbacks' available on your class. Ready will stomp on these variables if you're trying to use them in your class.\n\n## Example\n```javascript\nvar ready = require('ready');\n\n// example class that uses Ready\nfunction MyClass() {\n  this.someProperty = 'some value';\n}\nready.mixin(MyClass.prototype);\n\n// Normal class prototype functions\nMyClass.prototype.doSomeWork = function() {};\n\n// Create a new class that uses ready mixin\nvar myClass = new MyClass();\n\n// Add callback for when myClass is ready\nmyClass.ready(function() {\n  console.log('I am now ready');\n});\n\nmyClass.doSomeWork();\n\n// We are now ready, fire callbacks!\nmyClass.ready(true);\n\n// Adding a new callback once we're already ready gets executed immediately\nmyClass.ready(function() {\n  console.log('I came late to the party, but I will still execute.');\n});\n\n// Ok, you can set the ready state to false now as well... for whatever reason\nmyClass.ready(false);\nmyClass.ready(function() {\n  console.log('I will not fire until you set ready to true again.');\n});\n```\n\n## License\n\n[MIT](LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/node-modules/ready.git"
  },
  "scripts": {
    "lint": "eslint index.js test",
    "test": "mocha -r thunk-mocha test/*.test.js",
    "test-cov": "istanbul cover node_modules/.bin/_mocha -- -r thunk-mocha test/*.test.js"
  },
  "version": "1.0.0"
}
