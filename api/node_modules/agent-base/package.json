{
  "_args": [
    [
      {
        "raw": "agent-base@^4.2.0",
        "scope": null,
        "escapedName": "agent-base",
        "name": "agent-base",
        "rawSpec": "^4.2.0",
        "spec": ">=4.2.0 <5.0.0",
        "type": "range"
      },
      "/Users/vsastray/Documents/project/yiliao/api/node_modules/proxy-agent"
    ]
  ],
  "_from": "agent-base@^4.2.0",
  "_hasShrinkwrap": false,
  "_id": "agent-base@4.3.0",
  "_location": "/agent-base",
  "_nodeVersion": "10.15.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/agent-base_4.3.0_1559765836773_0.2712931340824465"
  },
  "_npmUser": {
    "name": "tootallnate",
    "email": "nathan@tootallnate.net"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "agent-base@^4.2.0",
    "scope": null,
    "escapedName": "agent-base",
    "name": "agent-base",
    "rawSpec": "^4.2.0",
    "spec": ">=4.2.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/http-proxy-agent",
    "/https-proxy-agent",
    "/pac-proxy-agent",
    "/proxy-agent"
  ],
  "_resolved": "https://registry.npmjs.org/agent-base/-/agent-base-4.3.0.tgz",
  "_shasum": "8165f01c436009bccad0b1d122f05ed770efc6ee",
  "_shrinkwrap": null,
  "_spec": "agent-base@^4.2.0",
  "_where": "/Users/vsastray/Documents/project/yiliao/api/node_modules/proxy-agent",
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net",
    "url": "http://n8.io/"
  },
  "bugs": {
    "url": "https://github.com/TooTallNate/node-agent-base/issues"
  },
  "dependencies": {
    "es6-promisify": "^5.0.0"
  },
  "description": "Turn a function into an `http.Agent` instance",
  "devDependencies": {
    "@types/es6-promisify": "^5.0.0",
    "@types/node": "^10.5.3",
    "mocha": "^3.4.2",
    "ws": "^3.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-salcGninV0nPrwpGNn4VTXBb1SOuXQBiqbrNXoeizJsHrsL6ERFM2Ne3JUSBWRE6aeNJI2ROP/WEEIDUiDe3cg==",
    "shasum": "8165f01c436009bccad0b1d122f05ed770efc6ee",
    "tarball": "https://registry.npmjs.org/agent-base/-/agent-base-4.3.0.tgz",
    "fileCount": 10,
    "unpackedSize": 37456,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc+CNNCRA9TVsSAnZWagAATykP/jACri9CPvfpESr+U//k\nP9WghQ7B6034z+DFn8MHJRkJca8eo1vC89gxc0kAxX747jIwehSbI6iL5cGh\n91YNmvDXBOvoN6v0LBM6HGaug3qUIVBYBYrAD32awzMXpqOx7QG8ZF+kssID\nPFSgAuwQqsYVxWM+K7KbTWwZT+SRLTAxK+/n2+RjpdPj/06Un6ZzRxMZcGLB\njMyQbgcjmi47WywScu7DvGppw55LwmtO8C6pw9ppM2EhJR4e4vPaJHpxyRoS\n8xEFnWuC3JTl5Vl8ESBSHmjtez7M/FKJMlGyYweJiYpEX98gvo8IDoMNz1+s\n4JhBog80hcS9/N/R/SVb9Y+fRB9QSPeXeyAHc8mmoWqDrqomxaXR3nT+choK\ne8jVhTQwN1SEaG/NwmApzIBnWnnKiJQx61uw8kQ6x/lYMDs7bON47I2ZWtSD\nVn7+5CZQDdNcINfOZoBICuFI+Fcj9+WUAO0kHhYtgySLj8OvZnEtxERJsbBd\nO+2wpMvJ3h74rVcs2sRVmy0bAyqxVTzHgyHrxRgq0aWjQh9hwGe40Kqz41eD\naxl12qLG/E88asD9Yc9zi1rgw6JXDDdQtC371Gw6yzB0D5vqSQ5Anidqu9ez\nkchYbnciPp8JcpeWMakfkMz8rZolWxwtqkhC2RBSO0zk1b48IlTbCBhek42b\nmXAz\r\n=M/FZ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 4.0.0"
  },
  "gitHead": "560f111674af84dec46a4c3070ddf3b22edd3e76",
  "homepage": "https://github.com/TooTallNate/node-agent-base#readme",
  "keywords": [
    "http",
    "agent",
    "base",
    "barebones",
    "https"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "tootallnate",
      "email": "nathan@tootallnate.net"
    }
  ],
  "name": "agent-base",
  "optionalDependencies": {},
  "readme": "agent-base\n==========\n### Turn a function into an [`http.Agent`][http.Agent] instance\n[![Build Status](https://travis-ci.org/TooTallNate/node-agent-base.svg?branch=master)](https://travis-ci.org/TooTallNate/node-agent-base)\n\nThis module provides an `http.Agent` generator. That is, you pass it an async\ncallback function, and it returns a new `http.Agent` instance that will invoke the\ngiven callback function when sending outbound HTTP requests.\n\n#### Some subclasses:\n\nHere's some more interesting uses of `agent-base`.\nSend a pull request to list yours!\n\n * [`http-proxy-agent`][http-proxy-agent]: An HTTP(s) proxy `http.Agent` implementation for HTTP endpoints\n * [`https-proxy-agent`][https-proxy-agent]: An HTTP(s) proxy `http.Agent` implementation for HTTPS endpoints\n * [`pac-proxy-agent`][pac-proxy-agent]: A PAC file proxy `http.Agent` implementation for HTTP and HTTPS\n * [`socks-proxy-agent`][socks-proxy-agent]: A SOCKS (v4a) proxy `http.Agent` implementation for HTTP and HTTPS\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install agent-base\n```\n\n\nExample\n-------\n\nHere's a minimal example that creates a new `net.Socket` connection to the server\nfor every HTTP request (i.e. the equivalent of `agent: false` option):\n\n```js\nvar net = require('net');\nvar tls = require('tls');\nvar url = require('url');\nvar http = require('http');\nvar agent = require('agent-base');\n\nvar endpoint = 'http://nodejs.org/api/';\nvar parsed = url.parse(endpoint);\n\n// This is the important part!\nparsed.agent = agent(function (req, opts) {\n  var socket;\n  // `secureEndpoint` is true when using the https module\n  if (opts.secureEndpoint) {\n    socket = tls.connect(opts);\n  } else {\n    socket = net.connect(opts);\n  }\n  return socket;\n});\n\n// Everything else works just like normal...\nhttp.get(parsed, function (res) {\n  console.log('\"response\" event!', res.headers);\n  res.pipe(process.stdout);\n});\n```\n\nReturning a Promise or using an `async` function is also supported:\n\n```js\nagent(async function (req, opts) {\n  await sleep(1000);\n  // etc…\n});\n```\n\nReturn another `http.Agent` instance to \"pass through\" the responsibility\nfor that HTTP request to that agent:\n\n```js\nagent(function (req, opts) {\n  return opts.secureEndpoint ? https.globalAgent : http.globalAgent;\n});\n```\n\n\nAPI\n---\n\n## Agent(Function callback[, Object options]) → [http.Agent][]\n\nCreates a base `http.Agent` that will execute the callback function `callback`\nfor every HTTP request that it is used as the `agent` for. The callback function\nis responsible for creating a `stream.Duplex` instance of some kind that will be\nused as the underlying socket in the HTTP request.\n\nThe `options` object accepts the following properties:\n\n  * `timeout` - Number - Timeout for the `callback()` function in milliseconds. Defaults to Infinity (optional).\n\nThe callback function should have the following signature:\n\n### callback(http.ClientRequest req, Object options, Function cb) → undefined\n\nThe ClientRequest `req` can be accessed to read request headers and\nand the path, etc. The `options` object contains the options passed\nto the `http.request()`/`https.request()` function call, and is formatted\nto be directly passed to `net.connect()`/`tls.connect()`, or however\nelse you want a Socket to be created. Pass the created socket to\nthe callback function `cb` once created, and the HTTP request will\ncontinue to proceed.\n\nIf the `https` module is used to invoke the HTTP request, then the\n`secureEndpoint` property on `options` _will be set to `true`_.\n\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2013 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[http-proxy-agent]: https://github.com/TooTallNate/node-http-proxy-agent\n[https-proxy-agent]: https://github.com/TooTallNate/node-https-proxy-agent\n[pac-proxy-agent]: https://github.com/TooTallNate/node-pac-proxy-agent\n[socks-proxy-agent]: https://github.com/TooTallNate/node-socks-proxy-agent\n[http.Agent]: https://nodejs.org/api/http.html#http_class_http_agent\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/TooTallNate/node-agent-base.git"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "version": "4.3.0"
}
