{
  "_args": [
    [
      {
        "raw": "unescape@^1.0.1",
        "scope": null,
        "escapedName": "unescape",
        "name": "unescape",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/vsastray/Documents/project/yiliao/api/node_modules/utility"
    ]
  ],
  "_from": "unescape@>=1.0.1 <2.0.0",
  "_id": "unescape@1.0.1",
  "_inCache": true,
  "_location": "/unescape",
  "_nodeVersion": "7.7.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/unescape-1.0.1.tgz_1496950386675_0.1343847329262644"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {
    "is-extendable": "0.1.1"
  },
  "_requested": {
    "raw": "unescape@^1.0.1",
    "scope": null,
    "escapedName": "unescape",
    "name": "unescape",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/utility"
  ],
  "_resolved": "https://registry.npmjs.org/unescape/-/unescape-1.0.1.tgz",
  "_shasum": "956e430f61cad8a4d57d82c518f5e6cc5d0dda96",
  "_shrinkwrap": null,
  "_spec": "unescape@^1.0.1",
  "_where": "/Users/vsastray/Documents/project/yiliao/api/node_modules/utility",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/unescape/issues"
  },
  "dependencies": {
    "extend-shallow": "^2.0.1"
  },
  "description": "Convert HTML entities to HTML characters, e.g. `&gt;` converts to `>`.",
  "devDependencies": {
    "gulp-format-md": "^0.1.11",
    "mocha": "^3.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-O0+af1Gs50lyH1nUu3ZyYS1cRh01Q/kUKatTOkSs7jukXE6/NebucDVxyiDsA9AQ4JC1V1jUH9EO8JX2nMDgGQ==",
    "shasum": "956e430f61cad8a4d57d82c518f5e6cc5d0dda96",
    "tarball": "https://registry.npmjs.org/unescape/-/unescape-1.0.1.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "729b8db41a70afde32e158d576654909ca3d9a0e",
  "homepage": "https://github.com/jonschlinkert/unescape",
  "keywords": [
    "char",
    "character",
    "characters",
    "entities",
    "entity",
    "escape",
    "html",
    "string",
    "un-escape",
    "unescape",
    "xml"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "unescape",
  "optionalDependencies": {},
  "readme": "# unescape [![NPM version](https://img.shields.io/npm/v/unescape.svg?style=flat)](https://www.npmjs.com/package/unescape) [![NPM monthly downloads](https://img.shields.io/npm/dm/unescape.svg?style=flat)](https://npmjs.org/package/unescape) [![NPM total downloads](https://img.shields.io/npm/dt/unescape.svg?style=flat)](https://npmjs.org/package/unescape) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/unescape.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/unescape)\n\n> Convert HTML entities to HTML characters, e.g. `&gt;` converts to `>`.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save unescape\n```\n\n## Usage\n\n```js\nvar decode = require('unescape');\n\nconsole.log(decode('&lt;div&gt;abc&lt;/div&gt;'));\n//=> '<div>abc</div>'\n\n// get the default entities directly\nconsole.log(decode.chars);\n```\n\n## Characters\n\nFor performance, this library only handles the following common entities (split into groups for backward compatibility).\n\n### Default entities\n\nOnly the following entities are converted by default.\n\n| **Character** | **Description** | **Entity Name** | **Entity Number** | \n| --- | --- | --- | --- |\n| `<` | less than | `&lt;` | `&#60;` |\n| `>` | greater than | `&gt;` | `&#62;` |\n| `&` | ampersand | `&amp;` | `&#38;` |\n| `\"` | double quotation mark | `&quot;` | `&#34;` |\n| `'` | single quotation mark (apostrophe) | `&apos;` | `&#39;` |\n\nGet the default entities as an object:\n\n```js\nconsole.log(decode.chars);\n```\n\n### Extra entities\n\nOnly the following entities are converted when `'extras'` is passed as the second argument.\n\n| **Character** | **Description** | **Entity Name** | **Entity Number** |\n| `¢` | cent                               | `&cent;`  | `&#162;` |\n| `£` | pound                              | `&pound;` | `&#163;` |\n| `¥` | yen                                | `&yen;`   | `&#165;` |\n| `€` | euro                               | `&euro;`  | `&#8364;` |\n| `©` | copyright                          | `&copy;`  | `&#169;` |\n| `®` | registered trademark               | `&reg;`   | `&#174;` |\n\nExample:\n\n```js\n// convert only the \"extras\" characters\ndecode(str, 'extras');\n// get the object of `extras` characters\nconsole.log(decode.extras);\n```\n\n### All entities\n\nConvert both the defaults and extras:\n\n```js\ndecode(str, 'all');\n```\n\nGet all entities as an object:\n\n```js\nconsole.log(decode.all);\n```\n\n## Alternatives\n\nIf you need a more robust implementation, try one of the following libraries:\n\n* [html-entities](https://github.com/mdevils/node-html-entities)\n* [ent](https://github.com/substack/node-ent)\n\n## About\n\n### Related projects\n\n* [html-elements](https://www.npmjs.com/package/html-elements): Array of all standard HTML and HTML5 elements. | [homepage](https://github.com/jonschlinkert/html-elements \"Array of all standard HTML and HTML5 elements.\")\n* [html-tag](https://www.npmjs.com/package/html-tag): Generate HTML elements from a javascript object. | [homepage](https://github.com/jonschlinkert/html-tag \"Generate HTML elements from a javascript object.\")\n* [html-toc](https://www.npmjs.com/package/html-toc): Generate a HTML table of contents using cheerio. | [homepage](https://github.com/jonschlinkert/html-toc \"Generate a HTML table of contents using cheerio.\")\n* [is-self-closing](https://www.npmjs.com/package/is-self-closing): Returns true if the given name is a HTML void element or common SVG self-closing… [more](https://github.com/jonschlinkert/is-self-closing) | [homepage](https://github.com/jonschlinkert/is-self-closing \"Returns true if the given name is a HTML void element or common SVG self-closing element.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright © 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on June 04, 2017._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jonschlinkert/unescape.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "verb": {
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "plugins": [
      "gulp-format-md"
    ],
    "lint": {
      "reflinks": true
    },
    "related": {
      "list": [
        "html-elements",
        "html-tag",
        "html-toc",
        "is-self-closing"
      ]
    },
    "reflinks": [
      "ent",
      "html-entities"
    ]
  },
  "version": "1.0.1"
}
